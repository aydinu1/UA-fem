def gau(str_in, n):
# n-point Gauss integration points and weight for triangles and lines
    import numpy as np
    
    #initilize output variables
    x = [[],[]]
    w = [[]]
    
    #create empty list of 12 elements (similar to 12x1 cell). u = [[], [], ....]
    #Note that could have been done as in the 'line' section below without using append
    u = list()
    v = list()
    w = list()
    for i in range(0,12):
        u.append( list() ) #different object reference each time
        v.append( list() ) #similarly create v and w lists
        w.append( list() )

      # Triangles 
    if str_in=='triangle':
              
        u[0].append(.33333333)
        v[0].append(.33333333)
        w[0].append(1.0)

        u[2].append([.66666667,.16666667,.16666667])
        v[2].append([.16666667,.16666667,.66666667])
        w[2].append([.33333333,.33333333,.33333333])

        u[3].append([.33333333,.60000000,.20000000,.20000000])
        v[3].append([.33333333,.20000000,.20000000,.60000000])
        w[3].append([-.5625000,.52083333,.52083333,.52083333])

        u[5].append([.81684757000,.91576214E-1,.91576214E-1,.10810302,.44594849,.44594849])
        v[5].append([.91576214E-1,.91576214E-1,.81684757000,.44594849,.44594849,.10810302])
        w[5].append([.10995174000,.10995174000,.10995174000,.22338159,.22338159,.22338159])

        u[6].append([.33333333,.79742699,.10128651,.10128651,.47014206,.47014206000,.59715872E-1])
        v[6].append([.33333333,.10128651,.10128651,.79742699,.47014206,.59715872E-1,.47014206000])
        w[6].append([.22500000,.12593918,.12593918,.12593918,.13239415,.13239415000,.13239415000])

        u[11].append([.87382197,.06308901,.06308901,.50142651,.24928675,.24928675,.63650250,.63650250,.31035245,.31035245,.05314505,.05314505])
        v[11].append([.06308901,.06308901,.87382197,.24928675,.24928676,.50142651,.31035245,.05314505,.63650250,.05314505,.63650250,.31035245])
        w[11].append([.05084491,.05084491,.05084491,.11678628,.11678628,.11678628,.08285108,.08285108,.08285108,.08285108,.08285108,.08285108])

        if n > 12 or not u[n-1]:          
            print(str(n), ' points not implemented for triangles.');
        else:
            x[0] = u[n-1];
            x[1] = v[n-1];
            w[0] = w[n-1];
    
    # Lines (from 'lgwt')
    else:

        if str_in == 'line':
            x = [[]]*3 #create empty lists
            w = [[]]*3
                
            x[0] = [0.500000];
            w[0] = [1.0];
            x[1] = [0.788675,0.211325];
            w[1] = [0.5, 0.5];
            x[2] = [0.887298,0.500000,0.112702];
            w[2] = [0.2778, 0.4444, 0.2778];
                #     x{4} = [0.930568,0.669991,0.330009,0.069432];
                #     w{4} = [0.930568,0.669991,0.330009,0.069432];
                #     x{5} = [0.953090,0.769235,0.500000,0.230765,0.046910];
                #     w{5} = [0.953090,0.769235,0.500000,0.230765,0.046910];
                #     x{6} = [0.966235,0.830605,0.619310,0.380690,0.169395,0.033765];
                #     w{6} = [0.966235,0.830605,0.619310,0.380690,0.169395,0.033765];
                #     x{7} = [0.974554,0.870766,0.702923,0.500000,0.297077,0.129234,0.025446];
                #     w{7} = [0.974554,0.870766,0.702923,0.500000,0.297077,0.129234,0.025446];
                #     x{8} = [0.980145,0.898333,0.762766,0.591717,0.408283,0.237234,0.101667,0.019855];
                #     w{8} = [0.980145,0.898333,0.762766,0.591717,0.408283,0.237234,0.101667,0.019855];
                #     x{9} = [0.984080,0.918016,0.806686,0.662127,0.500000,0.337873,0.193314,0.081984,0.015920];
                #     w{9} = [0.984080,0.918016,0.806686,0.662127,0.500000,0.337873,0.193314,0.081984,0.015920];
                #     x{10} = [0.986953,0.932532,0.839705,0.716698,0.574437,0.425563,0.283302,0.160295,0.067468,0.013047];
                #     w{10} = [0.986953,0.932532,0.839705,0.716698,0.574437,0.425563,0.283302,0.160295,0.067468,0.013047];
                #     x{11} = [0.989114,0.943531,0.865076,0.759548,0.634772,0.500000,0.365228,0.240452,0.134924,0.056469,0.010886];
                #     w{11} = [0.989114,0.943531,0.865076,0.759548,0.634772,0.500000,0.365228,0.240452,0.134924,0.056469,0.010886];
                #     x{12} = [0.990780,0.952059,0.884951,0.793659,0.683916,0.562617,0.437383,0.316084,0.206341,0.115049,0.047941,0.009220];
                #     w{12} = [0.990780,0.952059,0.884951,0.793659,0.683916,0.562617,0.437383,0.316084,0.206341,0.115049,0.047941,0.009220];
                #     x{13} = [0.992092,0.958799,0.900789,0.821175,0.724246,0.615229,0.500000,0.384771,0.275754,0.178825,0.099211,0.041201,0.007908];
                #     w{13} = [0.992092,0.958799,0.900789,0.821175,0.724246,0.615229,0.500000,0.384771,0.275754,0.178825,0.099211,0.041201,0.007908];
                #     x{14} = [0.993142,0.964217,0.913601,0.843646,0.757624,0.659556,0.554027,0.445973,0.340444,0.242376,0.156354,0.086399,0.035783,0.006858];
                #     w{14} = [0.993142,0.964217,0.913601,0.843646,0.757624,0.659556,0.554027,0.445973,0.340444,0.242376,0.156354,0.086399,0.035783,0.006858];
                #     x{15} = [0.993996,0.968637,0.924103,0.862209,0.785486,0.697076,0.600597,0.500000,0.399403,0.302924,0.214514,0.137791,0.075897,0.031363,0.006004];
                #     w{15} = [0.993996,0.968637,0.924103,0.862209,0.785486,0.697076,0.600597,0.500000,0.399403,0.302924,0.214514,0.137791,0.075897,0.031363,0.006004];
                #     x{16} = [0.994700,0.972288,0.932816,0.877702,0.808938,0.729008,0.640802,0.547506,0.452494,0.359198,0.270992,0.191062,0.122298,0.067184,0.027712,0.005300];
                #     w{16} = [0.994700,0.972288,0.932816,0.877702,0.808938,0.729008,0.640802,0.547506,0.452494,0.359198,0.270992,0.191062,0.122298,0.067184,0.027712,0.005300];
                #     x{17} = [0.995288,0.975338,0.940120,0.890757,0.828836,0.756345,0.675616,0.589242,0.500000,0.410758,0.324384,0.243655,0.171164,0.109243,0.059880,0.024662,0.004712];
                #     w{17} = [0.995288,0.975338,0.940120,0.890757,0.828836,0.756345,0.675616,0.589242,0.500000,0.410758,0.324384,0.243655,0.171164,0.109243,0.059880,0.024662,0.004712];
                #     x{18} = [0.995783,0.977912,0.946301,0.901852,0.845844,0.779885,0.705876,0.625943,0.542388,0.457612,0.374057,0.294124,0.220115,0.154156,0.098148,0.053699,0.022088,0.004217];
                #     w{18} = [0.995783,0.977912,0.946301,0.901852,0.845844,0.779885,0.705876,0.625943,0.542388,0.457612,0.374057,0.294124,0.220115,0.154156,0.098148,0.053699,0.022088,0.004217];
                #     x{19} = [0.996203,0.980104,0.951578,0.911357,0.860483,0.800273,0.732285,0.658282,0.580179,0.500000,0.419821,0.341718,0.267715,0.199727,0.139517,0.088643,0.048422,0.019896,0.003797];
                #     w{19} = [0.996203,0.980104,0.951578,0.911357,0.860483,0.800273,0.732285,0.658282,0.580179,0.500000,0.419821,0.341718,0.267715,0.199727,0.139517,0.088643,0.048422,0.019896,0.003797];
                #     x{20} = [0.996564,0.981986,0.956117,0.919558,0.873166,0.818027,0.755434,0.686853,0.613893,0.538263,0.461737,0.386107,0.313147,0.244566,0.181973,0.126834,0.080442,0.043883,0.018014,0.003436];
                #     w{20} = [0.996564,0.981986,0.956117,0.919558,0.873166,0.818027,0.755434,0.686853,0.613893,0.538263,0.461737,0.386107,0.313147,0.244566,0.181973,0.126834,0.080442,0.043883,0.018014,0.003436];
    return (np.array(x)), (np.array(w[0]))